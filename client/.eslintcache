[{"F:\\CNPMM\\CRM\\client\\src\\actions\\booksAction.js":"1","F:\\CNPMM\\CRM\\client\\src\\common\\ToastHelper.js":"2","F:\\CNPMM\\CRM\\client\\src\\page\\addBook.js":"3","F:\\CNPMM\\CRM\\client\\src\\page\\itemBook.js":"4","F:\\CNPMM\\CRM\\client\\src\\App.js":"5","F:\\CNPMM\\CRM\\client\\src\\constants\\ActionType.js":"6","F:\\CNPMM\\CRM\\client\\src\\page\\lstBook.js":"7","F:\\CNPMM\\CRM\\client\\src\\common\\Header.js":"8","F:\\CNPMM\\CRM\\client\\src\\reducers\\index.js":"9","F:\\CNPMM\\CRM\\client\\src\\reducers\\booksReducer.js":"10","F:\\CNPMM\\CRM\\client\\src\\configStore.js":"11","F:\\CNPMM\\CRM\\client\\src\\page\\bookDetail.js":"12","F:\\CNPMM\\CRM\\client\\src\\constants\\Apis.js":"13","F:\\CNPMM\\CRM\\client\\src\\common\\Description.js":"14","F:\\CNPMM\\CRM\\client\\src\\page\\updateBook.js":"15","F:\\CNPMM\\CRM\\client\\src\\index.js":"16","F:\\CNPMM\\CRM\\client\\src\\page\\loginPage.js":"17","F:\\CNPMM\\CRM\\client\\src\\page\\registerPage.js":"18","F:\\CNPMM\\CRM\\client\\src\\actions\\authAction.js":"19","F:\\CNPMM\\CRM\\client\\src\\common\\protectedRoute.js":"20","F:\\CNPMM\\CRM\\client\\src\\common\\Footer.js":"21","F:\\CNPMM\\CRM\\client\\src\\common\\dialog.js":"22","F:\\CNPMM\\CRM\\client\\src\\reducers\\authReducer.js":"23"},{"size":4261,"mtime":1608782685240,"results":"24","hashOfConfig":"25"},{"size":114,"mtime":1608431215850,"results":"26","hashOfConfig":"25"},{"size":11441,"mtime":1609557731228,"results":"27","hashOfConfig":"25"},{"size":1973,"mtime":1608806425406,"results":"28","hashOfConfig":"25"},{"size":1355,"mtime":1609557964552,"results":"29","hashOfConfig":"25"},{"size":1992,"mtime":1609554497525,"results":"30","hashOfConfig":"25"},{"size":2658,"mtime":1608806150409,"results":"31","hashOfConfig":"25"},{"size":8293,"mtime":1609557609537,"results":"32","hashOfConfig":"25"},{"size":248,"mtime":1608971992953,"results":"33","hashOfConfig":"25"},{"size":1577,"mtime":1608555130343,"results":"34","hashOfConfig":"25"},{"size":435,"mtime":1603951292447,"results":"35","hashOfConfig":"25"},{"size":6696,"mtime":1608805381938,"results":"36","hashOfConfig":"25"},{"size":50,"mtime":1608429771055,"results":"37","hashOfConfig":"25"},{"size":852,"mtime":1608594419185,"results":"38","hashOfConfig":"25"},{"size":11645,"mtime":1609558209855,"results":"39","hashOfConfig":"25"},{"size":345,"mtime":1608974773148,"results":"40","hashOfConfig":"25"},{"size":3524,"mtime":1609562222945,"results":"41","hashOfConfig":"25"},{"size":2418,"mtime":1608770473296,"results":"42","hashOfConfig":"25"},{"size":3662,"mtime":1609563174643,"results":"43","hashOfConfig":"25"},{"size":1597,"mtime":1609565395136,"results":"44","hashOfConfig":"25"},{"size":2202,"mtime":1608740521785,"results":"45","hashOfConfig":"25"},{"size":989,"mtime":1608806652245,"results":"46","hashOfConfig":"25"},{"size":951,"mtime":1609562971708,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"nulxv5",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"63"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"73"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"63"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"F:\\CNPMM\\CRM\\client\\src\\actions\\booksAction.js",[],["108","109"],"F:\\CNPMM\\CRM\\client\\src\\common\\ToastHelper.js",[],["110","111"],"F:\\CNPMM\\CRM\\client\\src\\page\\addBook.js",["112"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { toastMessage } from '../common/ToastHelper';\r\nimport * as bookActions from './../actions/booksAction'\r\nimport Header from './../common/Header'\r\nimport Footer from './../common/Footer'\r\nimport { useJwt } from \"react-jwt\";\r\n\r\nconst AddBook = () => {\r\n    \r\n    const dispatch = useDispatch();\r\n    const hiddenFileInput = React.useRef(null);\r\n    const books = useSelector(state => state.books.books);\r\n    const handleUpLoadClick = event => {\r\n        hiddenFileInput.current.click();\r\n    };\r\n    //Show review Image\r\n    const showPreview = e => {\r\n        if (e.target.files && e.target.files[0]) {\r\n            let bookImage = e.target.files[0]\r\n            const reader = new FileReader();\r\n            reader.onload = x => {\r\n                setBookImage(bookImage);\r\n                setImageSrc(x.target.result)\r\n            }\r\n            reader.readAsDataURL(bookImage)\r\n        }\r\n        else {\r\n            setBookImage(null);\r\n            setImageSrc('/img/a.jpg')\r\n        }\r\n    };\r\n\r\n    //Input\r\n    const [name, setName] = useState('')\r\n    const [type, setType] = useState('')\r\n    const [author, setAuthor] = useState('')\r\n    const [amount, setAmount] = useState(0)\r\n    const [publishHouse, setPublishHouse] = useState('')\r\n    const [price, setPrice] = useState('')\r\n    const [coverPrice, setCoverPrice] = useState('')\r\n    const [pageAmount, setPageAmount] = useState(0)\r\n    const [size, setSize] = useState('')\r\n    const [coverType, setCoverType] = useState('')\r\n    const [description, setDescription] = useState('')\r\n    const [imageSrc, setImageSrc] = useState('/img/a.jpg')\r\n    const [bookImage, setBookImage] = useState(null)\r\n\r\n    //HandelInputChange\r\n    const handleNameInputChange = e => {\r\n        setName(e.target.value);\r\n    };\r\n    const handleTypeInputChange = e => {\r\n        setType(e.target.value);\r\n    };\r\n    const handleAuthorInputChange = e => {\r\n        setAuthor(e.target.value);\r\n    };\r\n\r\n    const handleAmountInputChange = e => {\r\n        setAmount(e.target.value);\r\n    };\r\n    const handlePublishHouseInputChange = e => {\r\n        setPublishHouse(e.target.value);\r\n    };\r\n    const handlePriceInputChange = e => {\r\n        setPrice(e.target.value);\r\n    };\r\n    const handleCoverPriceInputChange = e => {\r\n        setCoverPrice(e.target.value);\r\n    };\r\n    const handlePageAmountInputChange = e => {\r\n        setPageAmount(e.target.value);\r\n    };\r\n    const handleSizeInputChange = e => {\r\n        setSize(e.target.value);\r\n    };\r\n    const handleCoverTypeChange = e => {\r\n        setCoverType(e.target.value);\r\n    };\r\n    const handleDescriptionInputChange = e => {\r\n        setDescription(e.target.value);\r\n    };\r\n    //Add book\r\n    useEffect(() => {\r\n        setName('')\r\n        setType('')\r\n        setAuthor('')\r\n        setAmount(0)\r\n        setPublishHouse('')\r\n        setPrice('')\r\n        setCoverPrice('')\r\n        setPageAmount(0)\r\n        setSize('')\r\n        setCoverType('')\r\n        setDescription('')\r\n        setImageSrc('/img/a.jpg')\r\n        setBookImage(null)\r\n    }, [books])\r\n    const handleSubmit = async e => {\r\n        if (bookImage !== null) {\r\n            const formData = new FormData();\r\n            formData.append(\"name\", name)\r\n            formData.append(\"type\", type)\r\n            formData.append(\"author\", author)\r\n            formData.append(\"amount\", amount)\r\n            formData.append(\"price\", price)\r\n            formData.append(\"coverPrice\", coverPrice)\r\n            formData.append(\"pageAmount\", pageAmount)\r\n            formData.append(\"publishHouse\", publishHouse)\r\n            formData.append(\"size\", size)\r\n            formData.append(\"coverType\", coverType)\r\n            formData.append(\"description\", description)\r\n            formData.append(\"bookImage\", bookImage)\r\n            await dispatch(bookActions.addBook(formData));\r\n        } else {\r\n            toastMessage(\"Vui lòng chọn hình ảnh\")\r\n        }\r\n    };\r\n    return (\r\n        <div >\r\n            <Header />\r\n            <div id=\"wrapper\" style={{ marginTop: '20px' }}>\r\n                <div id=\"content-wrapper\" style={{ marginTop: '60px' }}>\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"card-body\">\r\n                            <div className=\"tm-bg-primary-dark tm-block tm-block-h-auto\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12\">\r\n                                        <h4 className=\"tm-block-title d-inline-block\" style={{ fontSize: '30px' }}>Thêm sách</h4>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row tm-edit-product-row\">\r\n                                    <div className=\"col-xl-6 col-lg-6 col-md-10\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-xs-12 col-sm-6\">\r\n                                                <label >Tên sách</label>\r\n                                                <input value={name} onChange={handleNameInputChange} type=\"text\" className=\"form-control validate\" data-large-mode=\"true\" />\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-xs-12 col-sm-6\">\r\n                                                <label >Nhà xuất bản</label>\r\n                                                <input value={publishHouse} onChange={handlePublishHouseInputChange} type=\"text\" className=\"form-control validate\" required />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-xs-12 col-sm-6\">\r\n                                                <label >Thể loại</label>\r\n                                                <input value={type} onChange={handleTypeInputChange} type=\"text\" className=\"form-control validate\" data-large-mode=\"true\" />\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-xs-12 col-sm-6\">\r\n                                                <label for=\"amount\">Số lượng</label>\r\n                                                <input value={amount} onChange={handleAmountInputChange} type=\"number\" className=\"form-control validate\" required />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-xs-12 col-sm-6\">\r\n                                                <label >Giá</label>\r\n                                                <input value={price} onChange={handlePriceInputChange} type=\"number\" className=\"form-control validate\" required />\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-xs-12 col-sm-6\">\r\n                                                <label >Giá bìa</label>\r\n                                                <input value={coverPrice} onChange={handleCoverPriceInputChange} type=\"number\" className=\"form-control validate\" data-large-mode=\"true\" />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-xs-12 col-sm-6\">\r\n                                                <label >Loại bìa</label>\r\n                                                <input value={coverType} onChange={handleCoverTypeChange} type=\"text\" className=\"form-control validate\" data-large-mode=\"true\" />\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-xs-12 col-sm-6\">\r\n                                                <label >Tác giả</label>\r\n                                                <input value={author} onChange={handleAuthorInputChange} type=\"text\" className=\"form-control validate\" required />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-xs-12 col-sm-6\">\r\n                                                <label >Số trang</label>\r\n                                                <input value={pageAmount} onChange={handlePageAmountInputChange} type=\"number\" className=\"form-control validate\" data-large-mode=\"true\" />\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-xs-12 col-sm-6\">\r\n                                                <label >Kích thước</label>\r\n                                                <input value={size} onChange={handleSizeInputChange} type=\"text\" className=\"form-control validate\" required />\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n                                        <div className=\"form-group mb-3\">\r\n                                            <label for=\"description\">Mô tả</label>\r\n                                            <textarea value={description} onChange={handleDescriptionInputChange} className=\"form-control validate\" rows=\"3\" required></textarea>\r\n                                        </div>\r\n                                        <button onClick={handleSubmit} className=\"btn btn-info form-group mb-3\" style={{ width: '100%' }}>Thêm sản phẩm</button>\r\n\r\n                                    </div>\r\n                                    <div style={{ marginLeft: '50px', marginTop: '10px' }} >\r\n\r\n                                        <div className=\"row\">\r\n                                            <div >\r\n                                                <img alt=\"\" src={imageSrc} onClick={handleUpLoadClick} className=\"tm-product-img-dummy mx-auto\">\r\n                                                    {/* <i className=\"fas fa-cloud-upload-alt tm-upload-icon\" onClick={handleClick} ></i> */}\r\n                                                </img>\r\n                                                <div className=\"custom-file mt-3 mb-3\" >\r\n                                                    <input id=\"fileInput\" accept=\"image/*\" type=\"file\" style={{ display: 'none' }} ref={hiddenFileInput} onChange={showPreview} />\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div style={{marginTop:'120px'}}><Footer/></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddBook;","F:\\CNPMM\\CRM\\client\\src\\page\\itemBook.js",["113","114","115"],"import React from 'react';\r\nimport {useDispatch} from 'react-redux'\r\nimport * as bookActions from './../actions/booksAction'\r\nimport {withRouter} from 'react-router-dom'\r\nimport Dialog from './../common/dialog'\r\n\r\nconst ItemBookInAdmin = (props) => {\r\n\r\n    const isAuthenticated = localStorage.getItem('jwtToken') ? true : false;\r\n    const dispatch =useDispatch();\r\n    const handleDeleteClick =()=>{\r\n        dispatch(bookActions.deleteFromCart(props.id))\r\n        setOpen(false)\r\n    }\r\n\r\n    const imageSrc =`http://localhost:3002/uploads/${props.bookImage}`\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleClickOpen = (value) => {\r\n      setOpen(true);\r\n    };\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    };\r\n    return (\r\n\r\n            \r\n            <div className=\"col-md-3 col-sm-6\" style={{marginTop:'20px'}}>\r\n            <div className=\"product-grid6\">\r\n                <div onClick={props.onClick} className=\"product-image6\">\r\n                    <div >\r\n                        <img prop=\"\" className=\"pic-1\" src={imageSrc} style={{marginTop:'20px'}} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"product-content\">\r\n                    <h3 className=\"title\" ><div>{props.name}</div></h3>\r\n                    <div className=\"price\">{props.price} đ</div>\r\n                    <div className=\"title\">Còn lại: {props.amount} sản phẩm</div>\r\n                </div>\r\n                <ul className=\"social\">\r\n                    <li><a onClick={props.onClick}  data-tip=\"Xem chi tiết\"><i className=\"fas fa-search\"></i></a></li>\r\n                    {isAuthenticated ? <li><a onClick={handleClickOpen} data-tip=\"Xóa\"><i className=\"fas fa-trash\"></i></a></li>:null}\r\n                </ul>\r\n            </div>\r\n            <Dialog open={open} onDeleteClick={handleDeleteClick}  onClose={handleClose}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withRouter(ItemBookInAdmin);",["116","117"],"F:\\CNPMM\\CRM\\client\\src\\App.js",[],["118","119"],"F:\\CNPMM\\CRM\\client\\src\\constants\\ActionType.js",[],"F:\\CNPMM\\CRM\\client\\src\\page\\lstBook.js",["120"],"import React, { useEffect } from 'react';\r\n\r\nimport ItemBookInAdmin from '../page/itemBook'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport * as bookActions from '../actions/booksAction';\r\nimport {withRouter} from 'react-router-dom';\r\nimport Header from './../common/Header'\r\nimport Footer from './../common/Footer'\r\nimport Dialog from './../common/dialog'\r\n\r\nconst LstBook = (props) => {\r\n\r\n    const dispatch = useDispatch(); \r\n    const books = useSelector(state=>state.books.books);\r\n    useEffect(()=>{\r\n        dispatch(bookActions.getBooksRequest(\"\"));\r\n    },[dispatch])\r\n    const showBooks = books.map((book, index) => <ItemBookInAdmin\r\n    key={book._id}\r\n    id={book._id}\r\n    price={book.price}\r\n    name={book.name}\r\n    amount={book.amount}\r\n    bookImage={book.bookImage}\r\n    onClick={() => props.history.push(`/details/${book._id}`)}\r\n   \r\n  ></ItemBookInAdmin>)\r\n    \r\n    return (\r\n        <div>\r\n         \r\n            <Header/>\r\n            <div id=\"wrapper\">\r\n                <div id=\"content-wrapper\" style={{ marginTop: '100px' }}>\r\n\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"card mb-3\">\r\n\r\n                            <div className=\"card-body\">\r\n                                <div className=\"table-wrapper\">\r\n                                    <div className=\"table-title\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-8\"><h2>DANH SÁCH SÁCH</h2></div>\r\n                                            <div className=\"col-sm-4\">\r\n                                                <div >\r\n                                                    <button onClick={()=>props.history.push('/add')} type=\"button\" className=\"btn btn-info add-new\"><i className=\"fa fa-plus\"></i> Thêm sách</button>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                           {showBooks}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div style={{marginTop:'120px'}}><Footer/></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withRouter(LstBook);","F:\\CNPMM\\CRM\\client\\src\\common\\Header.js",["121","122"],"F:\\CNPMM\\CRM\\client\\src\\reducers\\index.js",[],["123","124"],"F:\\CNPMM\\CRM\\client\\src\\reducers\\booksReducer.js",["125","126","127"],"import * as Types from '../constants/ActionType'\r\nconst initialState = {\r\n    books: [],\r\n    selectedBook: null,\r\n\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n\r\n        case Types.GET_ALLBOOK:\r\n            return {\r\n                ...state,\r\n                books: action.books,\r\n\r\n            };\r\n        case Types.ADD_BOOK:\r\n            const addedBook = action.item;\r\n            return {\r\n                ...state,\r\n                books: [...state.books, addedBook]\r\n\r\n            };\r\n        case Types.GET_BOOK_BY_ID:\r\n            return {\r\n                ...state,\r\n                selectedBook: action.selectedBook\r\n            };\r\n        case Types.DELETE_BOOK:\r\n            let updatedBooks;\r\n            console.log(state.books)\r\n            for (let i = 0; i < state.books.length; i++) {\r\n                if (action.id === state.books[i]._id) {\r\n                    updatedBooks = [...state.books];\r\n\r\n                    updatedBooks.splice(i, 1)\r\n                    let st = {\r\n                        ...state,\r\n                        books: updatedBooks,\r\n                    };\r\n                    return st;\r\n                }\r\n            }\r\n\r\n        case Types.GET_BOOK_BY_ID:\r\n            return {\r\n                ...state,\r\n                selectedBook: action.selectedBook\r\n            };\r\n        case Types.SEARCH_BOOK:\r\n            return {\r\n                ...state,\r\n                searchedResultBooks: action.searchedResultBooks\r\n            }\r\n        default: return state;\r\n    }\r\n}\r\n","F:\\CNPMM\\CRM\\client\\src\\configStore.js",[],"F:\\CNPMM\\CRM\\client\\src\\page\\bookDetail.js",["128"],"import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\"\r\nimport * as bookActions from './../actions/booksAction'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport Header from './../common/Header'\r\nimport Description from './../common/Description'\r\nimport Footer from './../common/Footer'\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n\r\n    container: {\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: '0px',\r\n            marginRight: '0px',\r\n\r\n        },\r\n        [theme.breakpoints.up('lg')]: {\r\n            marginLeft: '87px',\r\n            marginRight: '87px',\r\n            padding: '10px',\r\n            height: '400px',\r\n        },\r\n        [theme.breakpoints.down('xs')]: {\r\n            marginLeft: '0px',\r\n            marginRight: '0px',\r\n        },\r\n    },\r\n    cover_product_detail: {\r\n\r\n        [theme.breakpoints.up('lg')]: {\r\n            margin: '10px',\r\n            display: 'flex'\r\n        },\r\n        [theme.breakpoints.up('md')]: {\r\n            margin: '10px',\r\n            display: 'flex',\r\n        },\r\n        [theme.breakpoints.up('sm')]: {\r\n            margin: '10px',\r\n            display: 'flex',\r\n\r\n        },\r\n        [theme.breakpoints.down('xs')]: {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center'\r\n        },\r\n    },\r\n    card_image_detail: {\r\n        height: '360px',\r\n        width: '350px',\r\n        display: 'flex',\r\n        alignContent: \"center\",\r\n        justifyContent: 'center',\r\n        [theme.breakpoints.down('xs')]: {\r\n            alignItem: 'center'\r\n\r\n        },\r\n    },\r\n    card_title_detail: {\r\n        fontSize: '2vw',\r\n        color: 'black',\r\n        fontWeight: '700',\r\n        marginBottom: '1.5em',\r\n        [theme.breakpoints.down('xs')]: {\r\n            fontSize: '20px',\r\n            color: 'black',\r\n            fontWeight: '700',\r\n            marginBottom: '1.5em',\r\n        },\r\n    },\r\n    card_price: {\r\n        fontWeight: '600',\r\n        fontSize: '30px',\r\n        fontFamily: 'Arial',\r\n        color: 'red'\r\n    },\r\n    card_info: {\r\n        fontWeight: '600', fontSize: '12px'\r\n    },\r\n    mgleft: {\r\n        marginLeft: '40px',\r\n        [theme.breakpoints.down('xs')]: {\r\n            marginLeft: '0px'\r\n        },\r\n    }\r\n\r\n\r\n}));\r\n\r\nconst BookDetail = (props) => {\r\n    const dispatch = useDispatch();\r\n    const id = props.match.params.book_id\r\n    const selectedBook = useSelector(state => state.books.selectedBook)\r\n\r\n    useEffect(() => {\r\n        dispatch(bookActions.getBookByIdRequest(id))\r\n\r\n    }, [dispatch, id])\r\n    const classes = useStyles();\r\n    const imageSrc = selectedBook ? `http://localhost:3002/uploads/${selectedBook.bookImage}` : ''\r\n    return (\r\n        <div style={{ paddingTop: '120px' }}>\r\n            <Header />\r\n            {selectedBook ? <div>\r\n                <Paper className={` ${classes.container}`}>\r\n                <div className={classes.cover_product_detail} >\r\n                    <div className={classes.card_image_detail}>\r\n                        <img src={imageSrc} alt=\"product \" style={{ maxWidth: '100%', maxHeight: '100%' }} />\r\n                    </div>\r\n                    <div className={classes.mgleft}>\r\n                        <Grid container style={{ marginBottom: '0.5em', height: '50px' }}>\r\n                            <span className={classes.card_title_detail}>{selectedBook.name}</span>\r\n                        </Grid>\r\n                        <div style={{ display: 'flex', flexDirection: 'row' }}>\r\n                            <p style={{ marginBottom: '0.5em' }}><span\r\n                                className={classes.card_info}>Tác giả: {selectedBook.author}</span></p>\r\n                            <div style={{flexGrow:1,minWidth:'40px'}}></div>\r\n                            <p style={{ marginBottom: '0.5em',justifyContent:'flex-end' }}><span\r\n                                className={classes.card_info}>Thể loại: {selectedBook.type}</span></p>\r\n                        </div>\r\n                        <div style={{ display: 'flex', flexDirection: 'row' }}>\r\n                        <p style={{ marginBottom: '0.5em' }}><span\r\n                            className={classes.card_info}>Nhà xuất bản: {selectedBook.publishHouse}</span></p>\r\n                            <div style={{flexGrow:1,minWidth:'40px'}}></div>\r\n                        <p style={{ marginBottom: '0.5em',justifyContent:'flex-end' }}><span\r\n                            className={classes.card_info}>Loại bìa: {selectedBook.coverType}</span></p>\r\n                        </div>\r\n                        <p style={{ marginBottom: '0.5em' }}><span\r\n                            className={classes.card_price}>{selectedBook.price} đ</span></p>\r\n                        \r\n                        <p style={{ marginBottom: '0.5em' }}><span\r\n                            className={classes.card_info}>Số trang: {selectedBook.pageAmount}</span></p>\r\n                        <p style={{ marginBottom: '0.5em' }}><span\r\n                            className={classes.card_info}>Kích thước: {selectedBook.size}</span></p>\r\n\r\n                        <p style={{ marginBottom: '0.5em' }}><span\r\n                            className={classes.card_info}>Tiết kiệm: {Math.round(((selectedBook.coverPrice-selectedBook.price)/selectedBook.coverPrice)*100)}%</span></p>\r\n                        <p style={{ marginBottom: '1em' }}><span\r\n                            className={classes.card_info}>Giá thị trường: {selectedBook.coverPrice} đ</span></p>\r\n                            <div style={{ marginBottom: '0.5em',marginLeft:'0px'}}>\r\n                                    <Button onClick={()=>props.history.push('/update',{bookData:selectedBook})}  size=\"small\" variant=\"contained\" color='primary'\r\n                                        style={{ fontSize: '1em',width:'150px' }}>\r\n                                        \r\n                                            Cập nhật \r\n                                        </Button>\r\n                                </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </Paper>\r\n            <div className={classes.container}>\r\n          <h4>Mô tả sách</h4>\r\n          <Description  description ={selectedBook.description} />\r\n        </div>\r\n        \r\n         \r\n                </div> : null}\r\n                <div style={{marginTop:'50px'}}><Footer/></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BookDetail;","F:\\CNPMM\\CRM\\client\\src\\constants\\Apis.js",[],"F:\\CNPMM\\CRM\\client\\src\\common\\Description.js",["129"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n\r\n  paragraph: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: '0px',\r\n      marginRight: '0px',\r\n      marginTop: '30px',\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      marginLeft: '87px', marginRight: '87px', wordWrap: 'break-word', marginTop: '10px'\r\n    },\r\n    [theme.breakpoints.down('xs')]: {\r\n      marginLeft: '0px',\r\n      marginRight: '0px',\r\n      marginTop: '30px',\r\n    },\r\n  },\r\n\r\n}));\r\n\r\n\r\nconst Description = (props) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <Paper >\r\n        <p style={{ height: '50%', padding: '15px' }}>{props.description}</p>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Description;","F:\\CNPMM\\CRM\\client\\src\\page\\updateBook.js",["130"],"import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { toastMessage } from '../common/ToastHelper';\r\nimport * as bookActions from './../actions/booksAction'\r\nimport Header from './../common/Header'\r\nimport Footer from './../common/Footer'\r\n\r\nconst UpdateBook = (props) => {\r\n    const dispatch = useDispatch();\r\n   \r\n    const bookData = props.history.location.state ?  props.history.location.state.bookData : [];\r\n    const hiddenFileInput = React.useRef(null);\r\n    const handleUpLoadClick = event => {\r\n        hiddenFileInput.current.click();\r\n    };\r\n    //Show review Image\r\n    const showPreview = e => {\r\n        if (e.target.files && e.target.files[0]) {\r\n            let bookImage = e.target.files[0]\r\n            const reader = new FileReader();\r\n            reader.onload = x => {\r\n                setBookImage(bookImage);\r\n                setImageSrc(x.target.result)\r\n            }\r\n            reader.readAsDataURL(bookImage)\r\n        }\r\n        else {\r\n            setBookImage(null);\r\n            setImageSrc(`http://localhost:3002/uploads/${bookData.bookImage}`)\r\n        }\r\n    };\r\n\r\n    //Input\r\n    const [name, setName] = useState(bookData.name)\r\n    const [type, setType] = useState(bookData.type)\r\n    const [author, setAuthor] = useState(bookData.author)\r\n    const [amount, setAmount] = useState(bookData.amount)\r\n    const [publishHouse, setPublishHouse] = useState(bookData.publishHouse)\r\n    const [price, setPrice] = useState(bookData.price)\r\n    const [coverPrice, setCoverPrice] = useState(bookData.coverPrice)\r\n    const [pageAmount, setPageAmount] = useState(bookData.pageAmount)\r\n    const [size, setSize] = useState(bookData.size)\r\n    const [coverType, setCoverType] = useState(bookData.coverType)\r\n    const [description, setDescription] = useState(bookData.description)\r\n    const [imageSrc, setImageSrc] = useState(`http://localhost:3002/uploads/${bookData.bookImage}`)\r\n    const [bookImage, setBookImage] = useState(null)\r\n\r\n    //HandelInputChange\r\n    const handleNameInputChange = e => {\r\n        setName(e.target.value);\r\n    };\r\n    const handleTypeInputChange = e => {\r\n        setType(e.target.value);\r\n    };\r\n    const handleAuthorInputChange = e => {\r\n        setAuthor(e.target.value);\r\n    };\r\n\r\n    const handleAmountInputChange = e => {\r\n        setAmount(e.target.value);\r\n    };\r\n    const handlePublishHouseInputChange = e => {\r\n        setPublishHouse(e.target.value);\r\n    };\r\n    const handlePriceInputChange = e => {\r\n        setPrice(e.target.value);\r\n    };\r\n    const handleCoverPriceInputChange = e => {\r\n        setCoverPrice(e.target.value);\r\n    };\r\n    const handlePageAmountInputChange = e => {\r\n        setPageAmount(e.target.value);\r\n    };\r\n    const handleSizeInputChange = e => {\r\n        setSize(e.target.value);\r\n    };\r\n    const handleCoverTypeChange = e => {\r\n        setCoverType(e.target.value);\r\n    };\r\n    const handleDescriptionInputChange = e => {\r\n        setDescription(e.target.value);\r\n    };\r\n    //Update book\r\n    const handleSubmit = async e => {\r\n\r\n            \r\n            if(bookImage===null){\r\n                const id = bookData._id\r\n                const data ={id,name,type,author,amount,price,coverPrice,pageAmount,publishHouse,size,coverType,description}\r\n                await dispatch(bookActions.updateBookWithoutImage(data));\r\n            }\r\n            else{\r\n                const formData = new FormData();\r\n                formData.append(\"id\",bookData._id )\r\n                formData.append(\"name\", name)\r\n                formData.append(\"type\", type)\r\n                formData.append(\"author\", author)\r\n                formData.append(\"amount\", amount)\r\n                formData.append(\"price\", price)\r\n                formData.append(\"coverPrice\", coverPrice)\r\n                formData.append(\"pageAmount\", pageAmount)\r\n                formData.append(\"publishHouse\", publishHouse)\r\n                formData.append(\"size\", size)\r\n                formData.append(\"coverType\", coverType)\r\n                formData.append(\"description\", description)\r\n                formData.append(\"bookImage\", bookImage)\r\n                await dispatch(bookActions.updateBook(formData));\r\n            }\r\n          \r\n      \r\n    };\r\n    return (\r\n        <div >\r\n            <Header/>\r\n            <div id=\"wrapper\" style={{marginTop:'20px'}}>\r\n                <div id=\"content-wrapper\" style={{ marginTop: '60px' }}>\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"card-body\">\r\n                            <div className=\"tm-bg-primary-dark tm-block tm-block-h-auto\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12\">\r\n                                        <h4 className=\"tm-block-title d-inline-block\" style={{fontSize:'30px'}}>Cập nhật sách</h4>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row tm-edit-product-row\">\r\n                                    <div className=\"col-xl-6 col-lg-6 col-md-10\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-xs-12 col-sm-6\">\r\n                                                <label >Tên</label>\r\n                                                <input value={name} onChange={handleNameInputChange} type=\"text\" className=\"form-control validate\" data-large-mode=\"true\" />\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-xs-12 col-sm-6\">\r\n                                                <label >Nhà xuất bản</label>\r\n                                                <input value={publishHouse} onChange={handlePublishHouseInputChange} type=\"text\" className=\"form-control validate\" required />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-xs-12 col-sm-6\">\r\n                                                <label >Thể loại</label>\r\n                                                <input value={type} onChange={handleTypeInputChange} type=\"text\" className=\"form-control validate\" data-large-mode=\"true\" />\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-xs-12 col-sm-6\">\r\n                                                <label >Số lượng</label>\r\n                                                <input value={amount} onChange={handleAmountInputChange} type=\"number\" className=\"form-control validate\" required />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-xs-12 col-sm-6\">\r\n                                                <label >Giá</label>\r\n                                                <input value={price} onChange={handlePriceInputChange} type=\"number\" className=\"form-control validate\" required />\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-xs-12 col-sm-6\">\r\n                                                <label >Giá bìa</label>\r\n                                                <input value={coverPrice} onChange={handleCoverPriceInputChange} type=\"number\" className=\"form-control validate\" data-large-mode=\"true\" />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-xs-12 col-sm-6\">\r\n                                                <label >Loại bìa</label>\r\n                                                <input value={coverType} onChange={handleCoverTypeChange} type=\"text\" className=\"form-control validate\" data-large-mode=\"true\" />\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-xs-12 col-sm-6\">\r\n                                                <label >Tác giả</label>\r\n                                                <input value={author} onChange={handleAuthorInputChange} type=\"text\" className=\"form-control validate\" required />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-xs-12 col-sm-6\">\r\n                                                <label >Số trang</label>\r\n                                                <input value={pageAmount} onChange={handlePageAmountInputChange} type=\"number\" className=\"form-control validate\" data-large-mode=\"true\" />\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-xs-12 col-sm-6\">\r\n                                                <label >Kích thước</label>\r\n                                                <input value={size} onChange={handleSizeInputChange} type=\"text\" className=\"form-control validate\" required />\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n                                        <div className=\"form-group mb-3\">\r\n                                            <label for=\"description\">Mô tả</label>\r\n                                            <textarea value={description} onChange={handleDescriptionInputChange} className=\"form-control validate\" rows=\"3\" required></textarea>\r\n                                        </div>\r\n                                        <button onClick={handleSubmit} className=\"btn btn-info form-group mb-3\" style={{ width: '100%' }}>Cập nhật sản phẩm</button>\r\n\r\n                                    </div>\r\n                                    <div style={{ marginLeft: '50px', marginTop: '10px' }} >\r\n\r\n                                        <div className=\"row\">\r\n                                            <div >\r\n                                                <img alt=\"\" src={imageSrc} onClick={handleUpLoadClick} className=\"tm-product-img-dummy mx-auto\">\r\n                                                    {/* <i className=\"fas fa-cloud-upload-alt tm-upload-icon\" onClick={handleClick} ></i> */}\r\n                                                </img>\r\n                                                <div className=\"custom-file mt-3 mb-3\" >\r\n                                                    <input id=\"fileInput\" accept=\"image/*\" type=\"file\" style={{ display: 'none' }} ref={hiddenFileInput} onChange={showPreview} />\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div style={{marginTop:'120px'}}><Footer/></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UpdateBook;","F:\\CNPMM\\CRM\\client\\src\\index.js",["131","132","133"],"import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport store from './configStore'\nimport { Provider } from 'react-redux'\nimport { Route, Switch , BrowserRouter as Router} from \"react-router-dom\";\n\nReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n  document.getElementById('root')\n)\n",["134","135"],"F:\\CNPMM\\CRM\\client\\src\\page\\loginPage.js",["136"],"F:\\CNPMM\\CRM\\client\\src\\page\\registerPage.js",[],"F:\\CNPMM\\CRM\\client\\src\\actions\\authAction.js",[],"F:\\CNPMM\\CRM\\client\\src\\common\\protectedRoute.js",["137","138","139"],"F:\\CNPMM\\CRM\\client\\src\\common\\Footer.js",[],"F:\\CNPMM\\CRM\\client\\src\\common\\dialog.js",[],"F:\\CNPMM\\CRM\\client\\src\\reducers\\authReducer.js",["140"],{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","replacedBy":"144"},{"ruleId":"141","replacedBy":"145"},{"ruleId":"143","replacedBy":"146"},{"ruleId":"147","severity":1,"message":"148","line":7,"column":10,"nodeType":"149","messageId":"150","endLine":7,"endColumn":16},{"ruleId":"151","severity":1,"message":"152","line":31,"column":25,"nodeType":"153","endLine":31,"endColumn":100},{"ruleId":"154","severity":1,"message":"155","line":40,"column":25,"nodeType":"153","endLine":40,"endColumn":78},{"ruleId":"154","severity":1,"message":"155","line":41,"column":44,"nodeType":"153","endLine":41,"endColumn":88},{"ruleId":"141","replacedBy":"156"},{"ruleId":"143","replacedBy":"157"},{"ruleId":"141","replacedBy":"158"},{"ruleId":"143","replacedBy":"159"},{"ruleId":"147","severity":1,"message":"160","line":9,"column":8,"nodeType":"149","messageId":"150","endLine":9,"endColumn":14},{"ruleId":"147","severity":1,"message":"161","line":1,"column":18,"nodeType":"149","messageId":"150","endLine":1,"endColumn":27},{"ruleId":"147","severity":1,"message":"162","line":20,"column":10,"nodeType":"149","messageId":"150","endLine":20,"endColumn":22},{"ruleId":"141","replacedBy":"163"},{"ruleId":"143","replacedBy":"164"},{"ruleId":"165","severity":1,"message":"166","line":8,"column":1,"nodeType":"167","endLine":57,"endColumn":2},{"ruleId":"168","severity":1,"message":"169","line":45,"column":9,"nodeType":"170","messageId":"171","endLine":49,"endColumn":15},{"ruleId":"172","severity":1,"message":"173","line":45,"column":9,"nodeType":"170","messageId":"174","endLine":49,"endColumn":15},{"ruleId":"147","severity":1,"message":"175","line":1,"column":17,"nodeType":"149","messageId":"150","endLine":1,"endColumn":25},{"ruleId":"147","severity":1,"message":"176","line":29,"column":9,"nodeType":"149","messageId":"150","endLine":29,"endColumn":16},{"ruleId":"147","severity":1,"message":"162","line":3,"column":10,"nodeType":"149","messageId":"150","endLine":3,"endColumn":22},{"ruleId":"147","severity":1,"message":"177","line":6,"column":10,"nodeType":"149","messageId":"150","endLine":6,"endColumn":15},{"ruleId":"147","severity":1,"message":"178","line":6,"column":17,"nodeType":"149","messageId":"150","endLine":6,"endColumn":23},{"ruleId":"147","severity":1,"message":"179","line":6,"column":43,"nodeType":"149","messageId":"150","endLine":6,"endColumn":49},{"ruleId":"141","replacedBy":"180"},{"ruleId":"143","replacedBy":"181"},{"ruleId":"147","severity":1,"message":"182","line":2,"column":22,"nodeType":"149","messageId":"150","endLine":2,"endColumn":33},{"ruleId":"147","severity":1,"message":"175","line":1,"column":16,"nodeType":"149","messageId":"150","endLine":1,"endColumn":24},{"ruleId":"147","severity":1,"message":"162","line":3,"column":9,"nodeType":"149","messageId":"150","endLine":3,"endColumn":21},{"ruleId":"147","severity":1,"message":"183","line":13,"column":11,"nodeType":"149","messageId":"150","endLine":13,"endColumn":26},{"ruleId":"165","severity":1,"message":"166","line":9,"column":1,"nodeType":"167","endLine":35,"endColumn":2},"no-native-reassign",["184"],"no-negated-in-lhs",["185"],["184"],["185"],"no-unused-vars","'useJwt' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["184"],["185"],["184"],["185"],"'Dialog' is defined but never used.","'useEffect' is defined but never used.","'toastMessage' is defined but never used.",["184"],["185"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-duplicate-case","Duplicate case label.","SwitchCase","unexpected","no-fallthrough","Expected a 'break' statement before 'case'.","case","'useState' is defined but never used.","'classes' is assigned a value but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'Router' is defined but never used.",["184"],["185"],"'useSelector' is defined but never used.","'isAuthenticated' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]